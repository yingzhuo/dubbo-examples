# ----------------------------------------------------------------------------------------------------------------------
# Dubbo-Examples
#  https://github.com/yingzhuo/dubbo-example
# ----------------------------------------------------------------------------------------------------------------------
apiVersion: v1
kind: Namespace
metadata:
  name: de
---

apiVersion: v1
kind: Secret
metadata:
  name: harbor
  namespace: de
data:
  .dockerconfigjson: "eyJhdXRocyI6eyIxOTIuMTY4Ljk5LjExNSI6eyJ1c2VybmFtZSI6ImFkbWluIiwicGFzc3dvcmQiOiJQYXNzd29yZDAxISIsImVtYWlsIjoieWluZ3podW9AdnZoY2MuY29tIiwiYXV0aCI6IllXUnRhVzQ2VUdGemMzZHZjbVF3TVNFPSJ9fX0="
type: kubernetes.io/dockerconfigjson
---

# ----------------------------------------------------------------------------------------------------------------------
# 服务生产者
# ----------------------------------------------------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: producer
  namespace: de
spec:
  replicas: 2
  selector:
    matchLabels:
      app: producer
  paused: false
  minReadySeconds: 20
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: producer
    spec:
      imagePullSecrets:
        - name: harbor
      restartPolicy: Always
      containers:
        - name: core
          image: "192.168.99.115/yingzhuo/de-producer"
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 12
            httpGet:
              scheme: HTTP
              path: "/actuator/health/liveness"
              port: 8080
          readinessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 12
            httpGet:
              scheme: HTTP
              path: "/actuator/health/readiness"
              port: 8080
          ports:
            - name: http
              containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: producer
  namespace: de
spec:
  selector:
    app: producer
  type: ClusterIP
  ports:
    - name: http
      targetPort: 8080
      port: 8080
---

# ----------------------------------------------------------------------------------------------------------------------
# 服务消费者
# ----------------------------------------------------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer
  namespace: de
spec:
  replicas: 3
  selector:
    matchLabels:
      app: consumer
  paused: false
  minReadySeconds: 20
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: consumer
    spec:
      imagePullSecrets:
        - name: harbor
      restartPolicy: Always
      containers:
        - name: core
          image: "192.168.99.115/yingzhuo/de-consumer"
          imagePullPolicy: Always
          livenessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 12
            httpGet:
              scheme: HTTP
              path: "/actuator/health/liveness"
              port: 7777
          readinessProbe:
            initialDelaySeconds: 20
            timeoutSeconds: 5
            periodSeconds: 12
            httpGet:
              scheme: HTTP
              path: "/actuator/health/readiness"
              port: 7777
          ports:
            - name: http
              containerPort: 7777
---
apiVersion: v1
kind: Service
metadata:
  name: producer
  namespace: de
spec:
  selector:
    app: consumer
  type: NodePort
  ports:
    - name: http
      targetPort: 7777
      port: 7777
